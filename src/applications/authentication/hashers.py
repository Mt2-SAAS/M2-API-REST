# Importando el libería de encriptación
from hashlib import sha1

# Django 
from django.utils.crypto import get_random_string


UNUSABLE_PASSWORD_PREFIX = '!'
UNUSABLE_PASSWORD_SUFFIX_LENGTH = 40


def make_password(raw_password):
    """
    Make a password compatible with metin2 database
    if raw_password is none then generate a password
    """

    if raw_password is None:
        return UNUSABLE_PASSWORD_PREFIX + get_random_string(UNUSABLE_PASSWORD_SUFFIX_LENGTH)

    mysql_hash = '*'+sha1(
        sha1(
            raw_password.encode()
        ).digest()).hexdigest()
    mysql_hash = mysql_hash.upper()
    return mysql_hash


def validate_password(mysql_hash, raw_password):
    """
    Validate a mysql_hash with a raw_password
    """
    hash_password = make_password(raw_password)
    return mysql_hash == hash_password


def is_password_usable(encoded):
    """ 
    Return True if this password wasn't generated by
    User.set_unusable_password(), i.e. make_password(None).
    """
    return encoded is None or not encoded.startswith(UNUSABLE_PASSWORD_PREFIX)

